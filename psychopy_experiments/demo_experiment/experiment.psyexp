<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.90.1">
  <Settings>
    <Param name="expName" updates="None" val="Money task" valType="str"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1280, 720]" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="logging level" updates="None" val="debug" valType="code"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <CodeComponent name="code">
        <Param name="name" updates="None" val="code" valType="code"/>
        <Param name="Begin Experiment" updates="constant" val="# First thing is to point Python to the path where we have installed &amp;#10;# the bad and darc packages&amp;#10;import sys
sys.path.insert(0, '../..') # relative coding of 'up' to folders.&amp;#10;# TODO: WE NEED A NICER AND ROBUST SOLUTION HERE.&amp;#10;&amp;#10;# DESIGN GENERATOR ======================================================&amp;#10;from darc.designs import Kirby2009, Frye&amp;#10;design_thing = Frye()&amp;#10;&amp;#10;# set `max_trials` to an arbitrary high number... the design thing will &amp;#10;# escape out of the trial loop when it runs out of designs, or otherwise decides&amp;#10;# that we have run enough trials&amp;#10;max_trials = 666&amp;#10;&amp;#10;# we start with no previous response&amp;#10;last_response_chose_delayed = None&amp;#10;&amp;#10;# CREATE A MODEL ========================================================&amp;#10;from darc.delayed import models&amp;#10;model = models.Hyperbolic(n_particles=5_000) # was 50_000&amp;#10;&amp;#10;&amp;#10;# USEFUL HELPER FUNCTIONS ===============================================&amp;#10;&amp;#10;def was_last_response_delayed(last_keypress):&amp;#10;    '''this function returns last_response_chose_delayed as True or False, &amp;#10;    taking into account the location of the immediate and delayed rewards.&amp;#10;    last_keypress is either 'left' or 'right'&amp;#10;    '''&amp;#10;    if last_keypress == 'left':&amp;#10;        last_response_chose_delayed = False&amp;#10;    elif last_keypress == 'right':&amp;#10;        last_response_chose_delayed = True&amp;#10;    else:&amp;#10;        error('unexpected response.keys')&amp;#10;    return last_response_chose_delayed&amp;#10;&amp;#10;&amp;#10;# NOTE: Could break all these up into GET METHODS in design, and just ask for the &amp;#10;# strings directly in the psychopy text item thingy. BUT that is more opaque. Maybe&amp;#10;# having it out in the open and easy to adjust for people is good?&amp;#10;&amp;#10;def design_to_display_strings(design):&amp;#10;    # rewards -------------------------&amp;#10;    text_RA = f'£{design.ProspectA.reward}'&amp;#10;    text_RB = f'£{design.ProspectB.reward}'&amp;#10;    # delays --------------------------&amp;#10;    if design.ProspectA.delay == 0:&amp;#10;        text_DA = f'now'&amp;#10;    else:&amp;#10;        text_DA = f'in {design.ProspectA.delay} days'&amp;#10;&amp;#10;    text_DB = f'in {design.ProspectB.delay} days'&amp;#10;    # probabilities -------------------&amp;#10;    text_PA = f'{design.ProspectA.prob*100}%'&amp;#10;    text_PB = f'{design.ProspectB.prob*100}%'&amp;#10;    return (text_RA, text_RB, text_DA, text_DB, text_PA, text_PB)" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# DESIGN GENERATOR =================================================&amp;#10;# TODO: we can probably remove `last_response_chose_delayed` as being a required&amp;#10;# input here... the design_thing already has `all_data` so we can just look it up.&amp;#10;# But we'd have to deal with the special case of there being no data on the first&amp;#10;# trial&amp;#10;design = design_thing.get_next_design(last_response_chose_delayed)&amp;#10;&amp;#10;# NOTE: if we want to do any adjusments to the design, we should do that here&amp;#10;# to the actual design itself rather than just the text displayed to participants.&amp;#10;# That way the data we output will correspond to the prospects actually shown&amp;#10;# to participants.&amp;#10;&amp;#10;# If we are out of designs, then break out of the trial loop&amp;#10;if design is None:&amp;#10;    print('Breaking out of trial loop now')&amp;#10;    break&amp;#10;&amp;#10;# convert the design into meaningful strings &amp;#10;text_RA, text_RB, text_DA, text_DB, text_PA, text_PB = design_to_display_strings(design)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# Clear screen as soon as we press the button. Useful because the code &amp;#10;# below can take time to run before things are cleared, which leads to &amp;#10;# crappy responsivity&amp;#10;win.flip()&amp;#10;&amp;#10;&amp;#10;# DEAL WITH LAST RESPONSE #########################################&amp;#10;last_response_chose_delayed = was_last_response_delayed(response.keys)&amp;#10;&amp;#10;design_thing.enter_trial_design_and_response(design, last_response_chose_delayed)&amp;#10;&amp;#10;model.update_beliefs(design_thing.all_data)&amp;#10;&amp;#10;# NOTE TO SELF: in theory we could be calculating updated beliefs based on both&amp;#10;# possible responses *while the participant is thinking during the trial*&amp;#10;# and then going with the pre-computed version once they make their &amp;#10;# response. Could do this multi-threaded etc :) &amp;#10;&amp;#10;# #################################################################&amp;#10;&amp;#10;# write trial data to .csv&amp;#10;trials.addData('RA', design.ProspectA.reward)&amp;#10;trials.addData('DA', design.ProspectA.delay)&amp;#10;trials.addData('PA', design.ProspectA.prob)&amp;#10;&amp;#10;trials.addData('RB', design.ProspectB.reward)&amp;#10;trials.addData('DB', design.ProspectB.delay)&amp;#10;trials.addData('PB', design.ProspectB.prob)&amp;#10;&amp;#10;if last_response_chose_delayed:&amp;#10;    trials.addData('R', 'B')&amp;#10;else:&amp;#10;    trials.addData('R', 'A')" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="# export parameter summary ----------------------------&amp;#10;# TODO: leave like this or have as a method of `model`&amp;#10;model.θ.describe().to_csv(filename+'_parameter_summary.csv')&amp;#10;&amp;#10;# export all particles, full posterior ----------------&amp;#10;model.θ.to_csv(filename+'_parameter_all_particles.csv')&amp;#10;&amp;#10;# TODO: remove this, it's just handy while we develop&amp;#10;print(design_thing.all_data)&amp;#10;&amp;#10;&amp;#10;# VISUALISE POSTERIOR DISTRIBUTIONS ===============================&amp;#10;# potentially have this as a method in `model`&amp;#10;import matplotlib.pyplot as plt&amp;#10;n_params = len(model.prior) # note, psychopy errors if we as for len(model.θ)&amp;#10;fig, axes = plt.subplots(1, n_params, figsize=(9, 4), tight_layout=True)&amp;#10;for (axis, key) in zip(axes, model.θ.keys()):&amp;#10;    axis.hist(model.θ[key], 50, normed=1, facecolor='green', alpha=0.75)&amp;#10;    axis.set_xlabel(key)&amp;#10;plt.savefig(filename+'_parameter_plot.pdf')&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="RAitem">
        <Param name="name" updates="None" val="RAitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(-0.4, 0.2)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_RA" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <TextComponent name="DAitem">
        <Param name="name" updates="None" val="DAitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(-0.4, 0)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_DA" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <TextComponent name="PAitem">
        <Param name="name" updates="None" val="PAitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(-0.4, -0.2)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_PA" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <TextComponent name="RBitem">
        <Param name="name" updates="None" val="RBitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0.4,0.2)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_RB" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <TextComponent name="DBitem">
        <Param name="name" updates="None" val="DBitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0.4, 0)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_DB" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <TextComponent name="PBitem">
        <Param name="name" updates="None" val="PBitem" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0.4, -0.2)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="set every repeat" val="$text_PB" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <KeyboardComponent name="response">
        <Param name="name" updates="None" val="response" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.15" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instruction_text">
        <Param name="name" updates="None" val="instruction_text" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0,0.8)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="constant" val="left or right keys to chose" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
    </Routine>
    <Routine name="bye">
      <TextComponent name="goodbye">
        <Param name="name" updates="None" val="goodbye" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="constant" val="Thank you for taking part in science!" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="text">
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="text" updates="constant" val="You will be presented with choices between 2 amounts of money.&amp;#10;Some will be delivered at different points in time.&amp;#10;Some have a certain probability of being recieved. If not, you recieve nothing.&amp;#10;&amp;#10;Your job is to consider which you prefer and choose using the LEFT or RIGHT keys.&amp;#10;&amp;#10;There is no correct or incorrect response, please emphasise accuracy in which choice you prefer, no need to rush!&amp;#10;&amp;#10;Press SPACE to continue." valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
      </TextComponent>
      <KeyboardComponent name="space_press">
        <Param name="name" updates="None" val="space_press" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.0" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="nReps" updates="None" val="666" valType="code"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="bye"/>
  </Flow>
</PsychoPy2experiment>
